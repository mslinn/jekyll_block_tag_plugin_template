#!/bin/bash

# SPDX-License-Identifier: Apache-2.0

unset FUTURE_POSTS

export FUTURE_POSTS="--future"
export HOST=0.0.0.0
export INCREMENTAL="--incremental"
export LIVE="--livereload"
export LIVE_PORT="--livereload_port 3572$PORT_LSB"
export PORT="4444"

export DRAFTS="--drafts"
export UNPUBLISHED="--unpublished"
unset QUIET
unset VERBOSE
export PORT="4444"

export OPTIONS="$LIVE_PORT"

function isWindows {
  if [ "$( grep -i Microsoft /proc/version )" ]; then echo yes; fi
}

# Force polling if the script is running on a Windows drive
if [ "$( isWindows )" ]; then
  export OPTIONS="$OPTIONS --force_polling"
fi


function help {
   echo "Runs Jekyll. The default domain:port is localhost:$PORT.
  Options are:
    -F         Disable future posts
    -H domain  Run from given host, defaults to localhost
    -I         Disable incremental compilation
    -L         Disable live reload (use if cannot bind to server/port)
    -c         Clear cache and rebuild site
    -d         Debug mode
    -D         Disable drafts and unpublished
    -g 10      Generate only the last 10 posts
    -p 1234    Run from given port, defaults to $PORT
    -P         Generate a production site
    -q         Set Jekyll logging level to :error
    -v         Set Jekyll logging level to :debug

  For example, to run on http://localhost:$PORT, type:
  _bin/serve
  _bin/serve -c  # Clean out previous build

  When quiet and verbose are both specified, log-level is set to :error
"
   exit 1
}

function installDependencies {
  if [ -z "$( find /usr/lib/x86_64-linux-gnu -name 'libmagic.so*' )" ]; then
    echo "Installing libmagic-dev"
    yes | sudo apt install libmagic-dev
  fi

  if [ -z "$( which ruby )" ]; then
    yes | sudo apt install ruby-full
  fi

  if [ -z "$( which bundle )" ]; then
	  gem install bundler $QUIET
  fi

  bundle install $QUIET
}

function isSiteUp {
  curl -sSf http://$1 > /dev/null 2> /dev/null
}

function makePluginDocs {
  rm -rf jekyll/docs/*
  cd _plugins/ > /dev/null || exit
  if [ "$QUIET" ]; then YARD_QUIET="--no-stats --no-progress"; fi
  yard doc $QUIET $YARD_QUIET \
    jekyll_command_template.rb jekyll_filter_template.rb jekyll_generator_template.rb \
    rawinclude.rb string_overflow.rb symlink_watcher.rb > /dev/null 2> /dev/null
  cd - > /dev/null || exit
}


# Restore default Python environment
if [ "$(declare -f deactivate)" ]; then
  if [ -z "$QUIET" ]; then echo "Deactivating Python virtualenv"; fi
  deactivate
fi

# Set cwd to project /demo
GIT_ROOT="$( git rev-parse --show-toplevel )"
cd "${GIT_ROOT}/demo" || exit
source _bin/loadConfigEnvVars

export JEKYLL_ENV=development
while getopts "cdDhiFg:hH:ILp:Pqv\?" opt; do
   case $opt in
     D ) unset DRAFTS
         unset UNPUBLISHED
         ;;
     F ) unset FUTURE_POSTS ;;
     H ) export HOST="$OPTARG" ;;
     I ) unset INCREMENTAL ;;
     L ) unset LIVE ;;
     c ) if [ -z "$QUIET" ]; then echo "Removing temporary files from _site/"; fi
         #rm -rf _site/*
         bundle exec jekyll clean $QUIET
         ;;
     d ) set -xv ;;
     g ) export OPTIONS="$OPTIONS --limit_posts=$OPTARG" ;; # generate only the last 10 posts
     p ) export PORT="$OPTARG" ;;
     P ) export JEKYLL_ENV=production ;;
     q ) export QUIET="--quiet" ;;
     v ) export VERBOSE="--verbose" ;;
     * ) help ;;
   esac
done
shift $(($OPTIND-1))

if [ "$HOST" ]; then OPTIONS="$OPTIONS --host $HOST"; fi   # Listen at the given hostname.
if [ "$PORT" ]; then OPTIONS="$OPTIONS --port $PORT"; fi   # Listen at the given port.
OPTIONS="$OPTIONS $FUTURE_POSTS"
OPTIONS="$OPTIONS $INCREMENTAL"
OPTIONS="$OPTIONS $LIVE"
OPTIONS="$OPTIONS $DRAFTS"
OPTIONS="$OPTIONS $UNPUBLISHED"
OPTIONS="$OPTIONS $QUIET"
OPTIONS="$OPTIONS $VERBOSE"

if [ -z "$QUIET" ]; then echo "OPTIONS=$OPTIONS"; fi

source use default > /dev/null
installDependencies
_bin/make_public_plugin_docs

bundle exec jekyll serve $OPTIONS 2>&1 | \
  grep -Ev 'Using the last argument as keyword parameters is deprecated'
